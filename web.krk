from js import exec, JSObject

def writeHTML(string):
    exec("var __tmp=document.createElement('div'); __tmp.innerHTML = `{}`; document.getElementById('container').appendChild(__tmp);".format(string))

def write(string):
    writeHTML('<div class="inset">{}</div>'.format(string))

let reserved = ' !#$&\'()*+,/:;=?@[]\"\n-%.<>\\^_`{}~'

def hex2(i):
    let h = hex(i)[2:]
    if len(h) == 1: return '0' + h
    return h

def urlencode(s):
    return ''.join(['%'+hex2(ord(c)) if c in reserved else c for c in s])

def nextButton():
    return '''<p class="nextbutton"><code><a onclick="insertNext()" href="#" class="codelink">next()</a></code></p>'''

def codeSample(code):
    return '''<code><a onclick="insertThis(this)" href="#" class="codelink">{}</a></code>'''.format(code)

def tutorial():
    '''Displays an interactive tutorial.'''
    write('''<h1>Welcome to Kuroko!</h1>
             <p>Kuroko is a bytecode-interpreted, dynamic, strongly-typed language with syntax similar to Python.</p>
             <p>Before we begin, here's how this tutorial will work:</p>
             <p>Each step will explain a concept and allow you to try it out in the repl. When you're ready to move to the next step, type {}</p>
             <p>Any time you see a code sample like that in the tutorial, you can click it to automatically run it.</p>
             <p><i>This tutorial is a work-in-progress / proof-of-concept.</i></p>
    '''.format(codeSample('next()')))
    __builtins__.next = tutorial_hello_world

def tutorial_hello_world():
    write('''<h1>Let's start with the basics...</h1>
             <p>Every programming tutorial starts with 'hello world', so let's start there! The {} function prints values.</p>
             <p>{}</p>
             <p>The repl will automatically print the value of the last statement, so we can also just do this:</p>
             <p>{}</p>
             {}
    '''.format(
        codeSample('<span class="ace_storage">print</span>()'),
        codeSample('<span class="ace_storage">print</span>(<span class="ace_string">"Hello, world!"</span>)'),
        codeSample('<span class="ace_string">"Hello, world"</span>'),
        nextButton()))
    __builtins__.next = tutorial_end

def tutorial_end():
    write('''<p>That's the end of the tutorial for now. Eventually all of the examples in the README will be added, as well as other things to try out.</p>''')
    del __builtins__.next
